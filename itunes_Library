import xml.etree.ElementTree as ET
import sqlite3

from __future__ import division
from datetime import datetime

starttime = datetime.now()


increment = 0

conn = sqlite3.connect('trackdb.sqlite')
cur = conn.cursor()

cur.executescript('''
DROP TABLE IF EXISTS Artist;
DROP TABLE IF EXISTS Album;
DROP TABLE IF EXISTS Track;

CREATE TABLE Artist (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
    name TEXT UNIQUE
);

CREATE TABLE Album (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
    artist_id INTEGER,
    title TEXT UNIQUE
);

CREATE TABLE Track (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
    title TEXT UNIQUE,
    album_ID  INTEGER,
    len integer, rating INTEGER, count INTEGER
);
''')

fname = 'TestLibrary.xml'

print "Checkpoint 1 is ", datetime.now()-starttime

def lookup(d, key):
    found = False
    for child in d:
        if found : return child.text
        if child.tag == 'key' and child.text == key :
            found = True
    return None

stuff = ET.parse(fname)

print "Checkpoint 2 is ", datetime.now()-starttime

all = stuff.findall('dict/dict/dict')

print "Checkpoint 3 is ", datetime.now()-starttime

print ('Dict count:', len(all))

for entry in all:
    if ( lookup(entry, 'Track ID') is None) : continue
        
    name = lookup(entry, 'Name')
    artist = lookup(entry, 'Artist')
    album = lookup(entry, 'Album')
    count = lookup(entry, 'Play Count')
    rating = lookup(entry, 'Rating')
    length = lookup(entry, 'Total Time')
    
    if name is None or artist is None or album is None:
        continue
        
    
    #print (name, artist, album, count, rating, length)
    
    cur.execute('''INSERT OR IGNORE INTO ARTIST (name)
        VALUES ( ? )''', (artist, ) )
    cur.execute('SELECT id FROM Artist WHERE name = ? ', (artist, ))
    artist_id = cur.fetchone()[0]
                
    cur.execute('''INSERT OR IGNORE INTO Album (title, artist_ID) 
        VALUES ( ?, ? )''', (album, artist_id ) )
    cur.execute('SELECT id FROM Album WHERE title = ? ', (album, ))
    album_id = cur.fetchone()[0]
                
    cur.execute('''INSERT OR REPLACE INTO Track
        (title, album_id, len, rating, count) 
        VALUES ( ?, ?, ?, ?, ? )''', 
        ( name, album_id, length, rating, count ) )
    
    
     
    increment += 1
    if increment % 100 == 0: 
        print "You are ","{:.1%}".format(increment/len(all)), " through."
        print "The time is now ", datetime.now()-starttime
    conn.commit()
    
print "all done!"

           

